[tool.poetry]
name = "poc-taskipy"
version = "0.1.0"
description = "testing taskipy"
authors = ["Gustavo Rizzo S M de Albuquerque <grizzo.albu@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.4"
django = "^4.2.0"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.13.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.variables]
PYTHON_VERSION = "3.12"
DOCKER_ENV = {var="PYTHON_VERSION={PYTHON_VERSION}", recursive=true}
DOCKER_CMD = {var="{DOCKER_ENV} docker", recursive=true}
DOCKER_COMPOSE = {var="{DOCKER_CMD} compose", recursive=true}
DOCKER_COMPOSE_DEV = {var="{DOCKER_COMPOSE} -f docker-compose-dev.yml", recursive=true}

SERVICES = "backend"
SERVICES_DEV = "backend-dev"

[tool.taskipy.settings]
use_vars = true

[tool.taskipy.tasks]
server = { cmd="python ./manage.py runserver", help="Run the server" }
migrate = { cmd="python ./manage.py migrate", help="Run the migrations"}
createsuperuser = { cmd="python ./manage.py createsuperuser", help="Create a superuser" }
setup = { cmd="task migrate && task createsuperuser", help="Run the migrations and create a superuser" }

build = { cmd="{DOCKER_COMPOSE} build {SERVICES}", help="Build images of production services" }
build-dev = { cmd="{DOCKER_COMPOSE_DEV} build {SERVICES_DEV}", help="Build images of development services" }

up = { cmd="{DOCKER_COMPOSE} up -d --force-recreate {SERVICES}", help="Start production services" }
up-dev = { cmd="{DOCKER_COMPOSE_DEV} up -d --force-recreate {SERVICES_DEV}", help="Start development services" }